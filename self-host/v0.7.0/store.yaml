apiVersion: v1
kind: ConfigMap
metadata:
  name: config-store
  namespace: vanus
data:
  store.yaml: |-
    port: 11811
    ip: ${POD_IP}
    controllers:
      - vanus-controller-0.vanus-controller:2048
      - vanus-controller-1.vanus-controller:2048
      - vanus-controller-2.vanus-controller:2048
    volume:
      id: ${VOLUME_ID}
      dir: /data
      capacity: 53687091200 # 50GB same as storage volume size
    meta_store:
      wal:
        io:
          engine: psync
    offset_store:
      wal:
        io:
          engine: psync
    raft:
      wal:
        io:
          engine: psync
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vanus-store
  namespace: vanus
  labels:
    app: vanus-store
spec:
  selector:
    matchLabels:
      app: vanus-store
  replicas: 3
  serviceName: vanus-store
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        labels:
          app: vanus-controller
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
  template:
    metadata:
      labels:
        app: vanus-store
      annotations:
        vanus.dev/metrics.port: "2112"
    spec:
      containers:
        - name: store
          image: public.ecr.aws/vanus/store:v0.7.0
          imagePullPolicy: IfNotPresent
          command:
            ["/bin/sh", "-c", "VOLUME_ID=${HOSTNAME##*-} /vanus/bin/store"]
          ports:
            - name: grpc
              containerPort: 11811
          env:
            - name: VANUS_LOG_LEVEL
              value: INFO
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: config-store
              mountPath: /vanus/config
            - name: data
              mountPath: /data
      volumes:
        - name: config-store
          configMap:
            name: config-store
